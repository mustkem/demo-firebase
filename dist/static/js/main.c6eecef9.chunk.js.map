{"version":3,"sources":["Store/ActionsTypes/actionTypes.js","Store/Reducers/MyReducer/myReducer.js","Store/Reducers/rootReducer.js","Config/fbConfig.js","Store/store.js","Components/Header/Header.js","Components/Layout/Layout.js","Containers/HomeContainer/HomeContainer.js","Components/Home/Home.js","Components/AddPost/MyEditor.js","Components/AddPost/AddPost.js","Containers/AddPostContainer/AddPostContainer.js","Store/Actions/actions.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","ADD_POST","initialState","rootReducer","combineReducers","page","state","action","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","fbConfig","reactReduxFirebase","props","className","Container","maxWidth","to","Header","children","withRouter","connect","dispatch","Grid","container","spacing","item","xs","map","href","MyEditor","editorState","EditorState","createEmpty","focus","refs","editor","onChange","setState","handleKeyCommand","command","_handleKeyCommand","onTab","e","_onTab","toggleBlockType","_toggleBlockType","toggleInlineStyle","style","_toggleInlineStyle","this","newState","RichUtils","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","placeholder","onToggle","onClick","blockStyleFn","getBlockStyle","customStyleMap","styleMap","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","key","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","AddPost","addPost","getState","collection","add","title","content","authorFiesrName","authorlastName","authorId","createdAt","Date","then","res","payload","catch","err","console","log","App","store","Layout","exact","path","component","HomeContainer","AddPostContainer","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6eecef9.chunk.js","sourcesContent":["export const actionTypes = {\r\n    ADD_POST: 'ADD_POST'\r\n};","import { actionTypes } from '../../ActionsTypes/actionTypes';\r\nconst initialState = {}\r\n\r\nexport default function myReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_POST:\r\n        return {\r\n            ...state,\r\n            ...action\r\n        };\r\n        break;\r\n\r\n        default:\r\n            return state\r\n        }\r\n    }","import { combineReducers } from 'redux';\r\nimport myReducer from './MyReducer/myReducer';\r\nconst rootReducer = combineReducers({\r\n    page: myReducer\r\n})\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n//initialise firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB4g1fFy8mVY9fs5c7dW0ti7t53zP2Y2rs\",\r\n  authDomain: \"my-project-1525784461261.firebaseapp.com\",\r\n  databaseURL: \"https://my-project-1525784461261.firebaseio.com\",\r\n  projectId: \"my-project-1525784461261\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"234456308154\",\r\n  appId: \"1:234456308154:web:21336fccce9f972d\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({})\r\n\r\nexport default firebase;","\r\nimport { createStore, applyMiddleware, compose  } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\n\r\nimport rootReducer from './Reducers/rootReducer';\r\nimport fbConfig from '../Config/fbConfig';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const appStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig)\r\n        )\r\n)\r\nexport default appStore","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"header top\">\r\n            <Container maxWidth=\"lg\">\r\n                <ul className=\"navbar\">\r\n                <li>\r\n                <   Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/add-post\">Add</Link>\r\n                </li>\r\n                {/* <li>\r\n                    <a href=\"/\">Css</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/\">ReactJs</a>\r\n                </li> */}\r\n                </ul>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\n\r\nexport default (props)=>{\r\n    return (\r\n        <div className=\"layout\">\r\n            <Header></Header>\r\n            {\r\n                props.children\r\n            }\r\n        </div>\r\n    )\r\n}","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Home from '../../Components/Home/Home';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default (props)=>{\r\n    return (\r\n        <div className=\"home\">\r\n           <Container>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                <h2>Articles</h2>\r\n                    {\r\n                        [1, 2, 3, 4, 5, 6].map(item => {\r\n                            return (\r\n                                <div>\r\n                                    <a href=\"\">\r\n                                        <h3>\r\n                                            Why Do React Hooks Rely on Call Order?\r\n                                            </h3>\r\n                                        <p>\r\n                                            Hit request for all api at server which \r\n                                            used to render when we load refresh the page. Make a store from this data and send down to client side.\r\n                                        </p>\r\n                                    </a>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <div className=\"advertisement\">\r\n                        <span>gop</span>\r\n                    </div>\r\n                    <div className=\"advertisement\">\r\n                        <span>npv</span>\r\n                    </div>\r\n                    <div className=\"advertisement\">\r\n                        <span>lpo</span>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","\r\nimport React from 'react';\r\nimport {Editor, EditorState, RichUtils} from 'draft-js';\r\n\r\n      \r\n\r\n      class MyEditor extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {editorState: EditorState.createEmpty()};\r\n\r\n          this.focus = () => this.refs.editor.focus();\r\n          this.onChange = (editorState) => this.setState({editorState});\r\n\r\n          this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n          this.onTab = (e) => this._onTab(e);\r\n          this.toggleBlockType = (type) => this._toggleBlockType(type);\r\n          this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n        }\r\n\r\n        _handleKeyCommand(command) {\r\n          const {editorState} = this.state;\r\n          const newState = RichUtils.handleKeyCommand(editorState, command);\r\n          if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n\r\n        _onTab(e) {\r\n          const maxDepth = 4;\r\n          this.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n        }\r\n\r\n        _toggleBlockType(blockType) {\r\n          this.onChange(\r\n            RichUtils.toggleBlockType(\r\n              this.state.editorState,\r\n              blockType\r\n            )\r\n          );\r\n        }\r\n\r\n        _toggleInlineStyle(inlineStyle) {\r\n          this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n              this.state.editorState,\r\n              inlineStyle\r\n            )\r\n          );\r\n        }\r\n\r\n        render() {\r\n          const {editorState} = this.state;\r\n\r\n          // If the user changes block type before entering any text, we can\r\n          // either style the placeholder or hide it. Let's just hide it now.\r\n          let className = 'RichEditor-editor';\r\n          var contentState = editorState.getCurrentContent();\r\n          if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n              className += ' RichEditor-hidePlaceholder';\r\n            }\r\n          }\r\n\r\n          return (\r\n            <div className=\"my-editor\">\r\n              <div>\r\n                <p>\r\n                  Write Post\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p>Title</p>\r\n                <input placeholder=\"title...\"></input>\r\n              </div>\r\n            <div className=\"RichEditor-root\">\r\n              <BlockStyleControls\r\n                editorState={editorState}\r\n                onToggle={this.toggleBlockType}\r\n              />\r\n              <InlineStyleControls\r\n                editorState={editorState}\r\n                onToggle={this.toggleInlineStyle}\r\n              />\r\n              <div className={className} onClick={this.focus}>\r\n                <Editor\r\n                  blockStyleFn={getBlockStyle}\r\n                  customStyleMap={styleMap}\r\n                  editorState={editorState}\r\n                  handleKeyCommand={this.handleKeyCommand}\r\n                  onChange={this.onChange}\r\n                  onTab={this.onTab}\r\n                  placeholder=\"Write post...\"\r\n                  ref=\"editor\"\r\n                  spellCheck={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      // Custom overrides for \"code\" style.\r\n      const styleMap = {\r\n        CODE: {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n          fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n          fontSize: 16,\r\n          padding: 2,\r\n        },\r\n      };\r\n\r\n      function getBlockStyle(block) {\r\n        switch (block.getType()) {\r\n          case 'blockquote': return 'RichEditor-blockquote';\r\n          default: return null;\r\n        }\r\n      }\r\n\r\n      class StyleButton extends React.Component {\r\n        constructor() {\r\n          super();\r\n          this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n          };\r\n        }\r\n\r\n        render() {\r\n          let className = 'RichEditor-styleButton';\r\n          if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n          }\r\n\r\n          return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n              {this.props.label}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      const BLOCK_TYPES = [\r\n        {label: 'H1', style: 'header-one'},\r\n        {label: 'H2', style: 'header-two'},\r\n        {label: 'H3', style: 'header-three'},\r\n        {label: 'H4', style: 'header-four'},\r\n        {label: 'H5', style: 'header-five'},\r\n        {label: 'H6', style: 'header-six'},\r\n        {label: 'Blockquote', style: 'blockquote'},\r\n        {label: 'UL', style: 'unordered-list-item'},\r\n        {label: 'OL', style: 'ordered-list-item'},\r\n        {label: 'Code Block', style: 'code-block'},\r\n      ];\r\n\r\n      const BlockStyleControls = (props) => {\r\n        const {editorState} = props;\r\n        const selection = editorState.getSelection();\r\n        const blockType = editorState\r\n          .getCurrentContent()\r\n          .getBlockForKey(selection.getStartKey())\r\n          .getType();\r\n\r\n        return (\r\n          <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n              <StyleButton\r\n                key={type.label}\r\n                active={type.style === blockType}\r\n                label={type.label}\r\n                onToggle={props.onToggle}\r\n                style={type.style}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\n      var INLINE_STYLES = [\r\n        {label: 'Bold', style: 'BOLD'},\r\n        {label: 'Italic', style: 'ITALIC'},\r\n        {label: 'Underline', style: 'UNDERLINE'},\r\n        {label: 'Monospace', style: 'CODE'},\r\n      ];\r\n\r\n      const InlineStyleControls = (props) => {\r\n        var currentStyle = props.editorState.getCurrentInlineStyle();\r\n        return (\r\n          <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map(type =>\r\n              <StyleButton\r\n                key={type.label}\r\n                active={currentStyle.has(type.style)}\r\n                label={type.label}\r\n                onToggle={props.onToggle}\r\n                style={type.style}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\nexport default MyEditor;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport MyEditor from './MyEditor';\r\n\r\nclass AddPost extends React.Component{\r\n    addPost=()=>{\r\n        this.props.addPost();\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"home\">\r\n               <Container maxWidth=\"lg\">\r\n                   <MyEditor />\r\n                   <button onClick={this.addPost}>Add</button>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddPost;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport AddPost from '../../Components/AddPost/AddPost';\r\nimport * as homeActions from '../../Store/Actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    'page': state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: () => dispatch(homeActions.addPost())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddPost));\r\n","import { actionTypes } from '../ActionsTypes/actionTypes';\r\n\r\nexport const addPost = (payload)=>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const fireStore = getFirestore();\r\n        fireStore.collection('posts').add({\r\n            title:\"my test title\",\r\n            content:\"my first content\",\r\n            authorFiesrName:'Mi',\r\n            authorlastName:\"Nin\",\r\n            authorId:12345,\r\n            createdAt:new Date()\r\n        }).then((res)=>{\r\n            dispatch({\r\n                type : actionTypes.ADD_POST,\r\n                payload\r\n            })\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })\r\n        \r\n    }\r\n}","import React from 'react';\nimport 'typeface-roboto';\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport store from './Store/store';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Layout from './Components/Layout/Layout';\nimport HomeContainer from './Containers/HomeContainer/HomeContainer';\nimport AddPostContainer from './Containers/AddPostContainer/AddPostContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n          <BrowserRouter>\n            <Layout>\n              <Switch>\n                <Route exact path=\"/\" component={HomeContainer}/>\n                <Route path=\"/add-post\" component={AddPostContainer}/>\n            </Switch>\n          </Layout>\n          </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}